---

- name: Downloading kube-controller-manager binary
  ansible.builtin.get_url:
    url: "https://storage.googleapis.com/kubernetes-release/release/v{{ kube_controller_manager_version }}/bin/linux/amd64/kube-controller-manager"
    dest: "/usr/local/bin/"
    mode: '0744'
  notify:
    - "Restart kube-controller-manager service"

- name: Creating configuration directory
  ansible.builtin.file:
    path: "{{ kube_controller_manager_config_path }}"
    state: directory

- name: Creating kubernetes var lib directory
  ansible.builtin.file:
    path: /var/lib/kubernetes
    state: directory

- name: Uploading certificate authority public key
  ansible.builtin.copy:
    src: "ca.pem"
    dest: "{{ kube_controller_manager_config_path }}"
  notify:
    - "Restart kube-controller-manager service"

- name: Uploading certificate authority private key
  ansible.builtin.copy:
    src: "ca-key.pem"
    dest: "{{ kube_controller_manager_config_path }}"
  notify:
    - "Restart kube-controller-manager service"

- name: Uploading certificate private key
  ansible.builtin.copy:
    src: "kube-controller-manager-key.pem"
    dest: "{{ kube_controller_manager_config_path }}"
  notify:
    - "Restart kube-controller-manager service"

- name: Uploading certificate public key
  ansible.builtin.copy:
    src: "kube-controller-manager.pem"
    dest: "{{ kube_controller_manager_config_path }}"
  notify:
    - "Restart kube-controller-manager service"

- name: Uploading service account key pair
  ansible.builtin.copy:
    src: "service-account-key.pem"
    dest: "{{ kube_controller_manager_config_path }}"
  notify:
    - "Restart kube-controller-manager service"

- name: Setting cluster config (kubectl config)
  ansible.builtin.command: "kubectl config set-cluster {{ cluster_name }} \
  --certificate-authority={{ kube_controller_manager_config_path }}/ca.pem \
  --embed-certs=true \
  --server=https://{{ group['loadbalancers'][0] }}:443 \
  --kubeconfig={{ kube_controller_manager_config_path }}/kube-controller-manager.kubeconfig"

- name: Setting cluster config credentials (kubectl config)
  ansible.builtin.command: "kubectl config set-credentials system:kube-controller-manager \
  --client-certificate={{ kube_controller_manager_config_path }}/kube-controller-manager.pem \
  --client-key={{ kube_controller_manager_config_path }}/kube-controller-manager-key.pem \
  --embed-certs=true \
  --server=https://{{ group['loadbalancers'][0] }}:443 \
  --kubeconfig={{ kube_controller_manager_config_path }}/kube-controller-manager.kubeconfig"

- name: Setting cluster config context (kubectl config)
  ansible.builtin.command: "kubectl config set-context default \
  --cluster={{ cluster_name }} \
  --user=system:kube-controller-manager \
  --kubeconfig={{ kube_controller_manager_config_path }}/kube-controller-manager.kubeconfig"

- name: Setting current context (kubectl config)
  ansible.builtin.command: "kubectl config use-context default \
  --kubeconfig={{ kube_controller_manager_config_path }}/kube-controller-manager.kubeconfig"

- name: Uploading service unit (systemd)
  ansible.builtin.template:
    src: kube-controller-manager.j2
    dest: /etc/systemd/system/kube-controller-manager.service
  notify:
    - "Restart kube-controller-manager service"

- name: Starting service (systemd)
  ansible.builtin.systemd:
    name: kube-controller-manager
    daemon_reload: yes
    enabled: yes
    state: started

- name: Flush kube-controller-manager handlers
  ansible.builtin.meta: flush_handlers

- name: Waiting for the service startup
  ansible.builtin.pause:
    seconds: 5

- name: Ensuring that the service is running GET - /healthz
  ansible.builtin.command: "curl --cacert /var/lib/kubernetes/ca.pem https://{{ ansible_host }}:10257/healthz"
  tags:
    - test
