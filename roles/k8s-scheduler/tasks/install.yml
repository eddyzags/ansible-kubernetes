---

- name: Downloading binary
  ansible.builtin.get_url:
    url: "https://storage.googleapis.com/kubernetes-release/release/v{{ kube_scheduler_version }}/bin/linux/amd64/kube-scheduler"
    dest: "/usr/local/bin"
    mode: '0744'
  notify:
    - "Restart kube-scheduler service"

- name: Creating configuration file directory
  ansible.builtin.file:
    path: "{{ kube_scheduler_config_path }}"
    state: directory

- name: Uploading configuration file
  ansible.builtin.template:
    src: kube-scheduler.yaml.j2
    dest: "{{ kube_scheduler_config_path }}/kube-scheduler.yaml"
  notify:
    - "Restart kube-scheduler service"

- name: Uploading certificate authority public key
  ansible.builtin.copy:
    src: "ca.pem"
    dest: "{{ kube_scheduler_config_path }}"
  notify:
    - "Restart kube-scheduler service"

- name: Uploading certificate
  ansible.builtin.copy:
    src: "kube-scheduler.pem"
    dest: "{{ kube_scheduler_config_path }}"
  notify:
    - "Restart kube-scheduler service"

- name: Uploading certificate key
  ansible.builtin.copy:
    src: "kube-scheduler-key.pem"
    dest: "{{ kube_scheduler_config_path }}"
  notify:
    - "Restart kube-scheduler service"

- name: Uploading service unit file (systemd)
  ansible.builtin.template:
    src: kube-scheduler.service.j2
    dest: /etc/systemd/system/kube-scheduler.service
  notify:
    - "Restart kube-scheduler service"

- name: Setting config cluster (kubectl config)
  ansible.builtin.command: "kubectl config set-cluster {{ cluster_name }} \
    --certificate-authority={{ kube_scheduler_config_path }}/ca.pem \
    --embed-certs=true \
    --server=https://{{ groups['control-plane-nodes'][0] }}:6443 \
    --kubeconfig={{ kube_scheduler_config_path }}/kube-scheduler.kubeconfig"

- name: Setting config credentials (kubectl config)
  ansible.builtin.command: "kubectl config set-credentials system:kube-scheduler \
    --client-certificate={{ kube_scheduler_config_path }}/kube-scheduler.pem \
    --client-key={{ kube_scheduler_config_path }}/kube-scheduler-key.pem \
    --embed-certs=true \
    --kubeconfig={{ kube_scheduler_config_path }}/kube-scheduler.kubeconfig"

- name: Setting config context (kubectl config)
  ansible.builtin.command: "kubectl config set-context default \
    --cluster={{ cluster_name }} \
    --user=system:kube-scheduler \
    --kubeconfig={{ kube_scheduler_config_path }}/kube-scheduler.kubeconfig"

- name: Setting config current context (kubectl config)
  ansible.builtin.command: "kubectl config use-context default \
    --kubeconfig={{ kube_scheduler_config_path }}/kube-scheduler.kubeconfig"

- name: Starting service (systemd)
  ansible.builtin.systemd:
    name: kube-scheduler
    daemon_reload: yes
    enabled: yes
    state: started

- name: Flush k8s-scheduler handlers
  ansible.builtin.meta: flush_handlers

- name: Waiting for the service startup
  ansible.builtin.pause:
    seconds: 5

- name: Ensuring that kube-scheduler is running /healthz
  ansible.builtin.command: "curl --cacert /var/lib/kubernetes/ca.pem https://{{ ansible_host }}:10259/healthz"
  tags:
    - test
